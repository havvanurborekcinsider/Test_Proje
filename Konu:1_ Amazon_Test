from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains
import time

# Chrome WebDriver'ı başlat
driver = webdriver.Chrome()

# 1. Amazon ana sayfasını aç ve başlığın doğruluğunu kontrol et
driver.get("http://www.amazon.com.tr")
assert "Amazon" in driver.title, "Amazon ana sayfası yüklenemedi!"
print("Amazon ana sayfası başarıyla yüklendi.")

# Çerez onay butonunu bul ve tıkla
try:
    # Çerez onayı butonunun XPath'ini kullanarak öğeyi bul
    cookie_accept_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, '//*[@id="sp-cc-accept"]'))
    )
    cookie_accept_button.click()
    print("Çerezler kabul edildi.")
except Exception as e:
    print("Çerez kabul butonu bulunamadı veya tıklanamadı:", e)

# 2. Giriş ekranına git ve giriş yap
driver.find_element(By.ID, "nav-link-accountList").click()  # Giriş butonuna tıkla
time.sleep(2)  # Giriş sayfasının yüklenmesi için bekle

email = "qualityasurance9@gmail.com"  # Amazon e-posta adresi
password = "Test1234!"  # Amazon şifresi

# E-posta adresini gir
driver.find_element(By.ID, "ap_email").send_keys(email)
driver.find_element(By.ID, "continue").click()
time.sleep(2)  # E-posta ile devam etmeden önce bekle

# Şifreyi gir
driver.find_element(By.ID, "ap_password").send_keys(password)
driver.find_element(By.ID, "signInSubmit").click()
time.sleep(5)  # Giriş işleminin tamamlanması için bekle

# 3. "samsung" araması yap
search_box = driver.find_element(By.ID, "twotabsearchtextbox")
search_box.send_keys("samsung")
search_box.send_keys(Keys.RETURN)  # Arama butonuna tıklama
time.sleep(5)  # Arama sonuçlarının yüklenmesini bekle
print("‘Samsung’ için arama başarıyla yapıldı.")

# 4. Arama sonuçlarında "Samsung" kelimesinin bulunduğundan emin ol
assert "samsung" in driver.page_source.lower(), "Arama sonuçlarında 'Samsung' bulunamadı!"
print("‘Samsung’ için arama sonuçları doğrulandı.")

# 5. Belirtilen öğe görününceye kadar kaydırma işlemi
try:
    # 2. sayfaya gitmek için XPath'i verilen öğeyi hedef olarak tanımlıyoruz
    target_xpath = '//*[@aria-label="2 sayfasına git"]'
    
    while True:
        try:
            # Öğeyi bul ve görünür olup olmadığını kontrol et
            target_element = WebDriverWait(driver, 20).until(
                EC.presence_of_element_located((By.XPATH, target_xpath))
            )
            if target_element.is_displayed():  # Eğer görünüyorsa döngüyü kır
                print("2. sayfaya gitmek içinbuton bulundu!")
                break
        except:
            pass  # Eğer öğe henüz yüklenmediyse hatayı yoksay
        
        # Sayfayı aşağı doğru kaydır
        driver.execute_script("window.scrollBy(0, 300);")
        time.sleep(1)  # Kısa bir bekleme süresi

    # Hedef öğeye tıklama (2. sayfa)
    target_element.click()
    print("2. sayfaya başarıyla geçildi.")

except Exception as e:
    print("Kaydırma işlemi sırasında bir hata oluştu:", e)

# Sayfanın 2. sayfa olarak yüklendiğini doğrulama
try:
    current_page = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.CSS_SELECTOR, ".s-pagination-selected"))
    )
    assert current_page.text == "2", f"2. sayfa yüklenemedi, şu anki sayfa: {current_page.text}"
    print("2. sayfada olduğum doğrulandı.")
except Exception as e:
    print("Sayfa geçişinde bir hata oluştu:", e)

# 6. Üstten 3. ürüne tıklama (dinamik olarak sayfa kaydırma)
try:
    # Sayfadaki tüm ürünlerin XPath'i
    product_xpath = "(//div[contains(@class, 's-main-slot')]//div[contains(@class, 's-result-item')])[3]"  # 3. ürünü hedef alıyoruz
    
    # Sayfa kaydırma işlemi yapılacak
    while True:
        try:
            # Ürünü bul ve görünür olup olmadığını kontrol et
            product = WebDriverWait(driver, 10).until(
                EC.element_to_be_clickable((By.XPATH, product_xpath))
            )
            if product.is_displayed():  # Eğer ürün görünüyorsa döngüyü kır
                print("3. Ürün bulundu!")
                break
        except Exception as e:
            print(f"Hata: {e}")
            pass  # Eğer öğe henüz yüklenmediyse hatayı yoksay
        
        # Sayfayı aşağı doğru kaydır
        driver.execute_script("window.scrollBy(0, 300);")
        time.sleep(1)  # Kısa bir bekleme süresi

    # Ürüne tıklama işlemi
    product.click()
    time.sleep(5)  # Ürünün sayfada açılması için bekle
    print("3. Ürüne başarıyla tıklandı.")

except Exception as e:
    print("Ürün tıklama işleminde bir hata oluştu:", e)

# 7. 'Add to List' butonuna tıkla
try:
    # XPath'i verilen "Add to List" butonunu hedef olarak tanımlıyoruz
    add_to_list_xpath = '//*[@id="add-to-wishlist-button-submit"]'  # XPath'inizi buraya ekleyin

    # Butonun tıklanabilir olmasını bekliyoruz
    add_to_list_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, add_to_list_xpath))
    )
    add_to_list_button.click()
    time.sleep(15)  # Listeye eklemenin tamamlanması için bekle
    print("Ürün başarıyla wish-list'e eklendi.")

except Exception as e:
    print("Add to List butonuna tıklama işleminde bir hata oluştu:", e)

# 8. 'Wish List' sayfasını aç
try:
    # XPath ile Wish List butonunu hedef olarak tanımlıyoruz
    wishlist_button_xpath = '//*[@id="huc-view-your-list-button"]/span/a'

    # Butonun tıklanabilir olmasını bekliyoruz
    wishlist_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, wishlist_button_xpath))
    )
    wishlist_button.click()
    time.sleep(3)  # Sayfanın yüklenmesini bekle
    print("Wish List sayfası açıldı.")
    
except Exception as e:
    print("Wish List sayfasına tıklama işleminde bir hata oluştu:", e)

# 9. Eklenen ürünün Wish List'te olduğunu doğrula
assert "samsung" in driver.page_source.lower(), "Wish List'te ürün bulunamadı!"
print("Wish List'te ürün bulundu.")

# 10. Ürünü favorilerden sil
try:
    # Silme butonunun varlığını kontrol et
    delete_button = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.CSS_SELECTOR, "[name='submit.deleteItem']"))
    )
    
    # Eğer buton mevcutsa ve tıklanabilir hale gelirse
    if delete_button.is_enabled():
        delete_button.click()
        print("Ürün başarıyla silindi.")
    else:
        print("Ürün silinemedi: Buton tıklanamaz durumda.")
        
except Exception as e:
    # Eğer hata oluşursa
    print(f"Bir hata oluştu: {e}")

# 11. Ürünün favorilerden silindiğini doğrula
# Sayfayı yenile
driver.refresh()

# Sayfa yenilendikten sonra 1 saniye bekle
time.sleep(1)

try:
    # "Wishlist boş" mesajını kontrol etmek için belirtilen XPath'e sahip öğeyi bekliyoruz
    empty_wishlist_image = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, "//*[@id='no-items-section']/span/div[1]/img"))
    )

    # Eğer öğe bulunursa, wishlist'in boş olduğunu belirtiyoruz
    print("Wishlist boş. !!TEST DONE!!")

except Exception as e:
    # Eğer öğe bulunmazsa, hata mesajı yazdırıyoruz
    print("Bir hata oluştu:", e)
    
time.sleep(10)

# Tarayıcıyı kapat
driver.quit()
